<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.lbqaq.mapper.OrderMapper">
    <resultMap id="BaseResultMap" type="top.lbqaq.model.Order">
        <!--@mbg.generated-->
        <!--@Table `order`-->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="time" jdbcType="TIMESTAMP" property="time"/>
        <result column="number" jdbcType="INTEGER" property="number"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="train_id" jdbcType="CHAR" property="trainId"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, `time`, `number`, user_id, train_id
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from `order`
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--@mbg.generated-->
        delete
        from `order`
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="top.lbqaq.model.Order" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into `order` (`time`, `number`, user_id,
                             train_id)
        values (#{time,jdbcType=TIMESTAMP}, #{number,jdbcType=INTEGER}, #{userId,jdbcType=BIGINT},
                #{trainId,jdbcType=CHAR})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="top.lbqaq.model.Order"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into `order`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="time != null">
                `time`,
            </if>
            <if test="number != null">
                `number`,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="trainId != null">
                train_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="time != null">
                #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="number != null">
                #{number,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="trainId != null">
                #{trainId,jdbcType=CHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="top.lbqaq.model.Order">
        <!--@mbg.generated-->
        update `order`
        <set>
            <if test="time != null">
                `time` = #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="number != null">
                `number` = #{number,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="trainId != null">
                train_id = #{trainId,jdbcType=CHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="top.lbqaq.model.Order">
        <!--@mbg.generated-->
        update `order`
        set `time`   = #{time,jdbcType=TIMESTAMP},
            `number` = #{number,jdbcType=INTEGER},
            user_id  = #{userId,jdbcType=BIGINT},
            train_id = #{trainId,jdbcType=CHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <select id="selectAllByUserId" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from `order`
        where user_id = #{userId,jdbcType=BIGINT}
    </select>

    <select id="selectAllByUserIdDTO" resultType="OrderListDTO" parameterType="Long">
        SELECT `order`.id, time, `order`.number, user_id, train_id, start_time
        FROM `order`,
             train
        WHERE train_id = train.id
          AND user_id = #{userId}
    </select>

    <select id="selectSumList" resultType="SumDTO">
        SELECT train_id, price, SUM(`order`.number) as number
        from `order`,
             train
        WHERE `order`.train_id = train.id
        GROUP BY train_id
    </select>
</mapper>